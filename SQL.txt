-- Создание таблицы "Исполнитель"
CREATE TABLE Executor (
    executor_id INT PRIMARY KEY,
    executor_name VARCHAR(255)
);

-- Создание таблицы "Жанр"
CREATE TABLE Genre (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(50)
);

-- Создание таблицы "Альбом"
CREATE TABLE Album (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(50),
    album_release_year INT(4)
);

-- Создание таблицы "Трек"
CREATE TABLE Track (
    track_id INT PRIMARY KEY,
    track_name VARCHAR(80),
    track_duration INT(10),
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES Album(album_id)
);

-- Создание таблицы "Сборник"
CREATE TABLE Collection (
    collection_id INT PRIMARY KEY,
    collection_name VARCHAR(50),
    collection_release_year INT(4)
);

-- Создание таблицы для связи "Исполнитель-Жанр"
CREATE TABLE ExecutorGenre (
    id SERIAL,
    executor_id INT,
    genre_id INT,
    PRIMARY KEY(executor_id, genre_id),
    FOREIGN KEY (executor_id) REFERENCES Executor(executor_id),
    FOREIGN KEY (genre_id) REFERENCES Genre(genre_id)
);

-- Создание таблицы для связи "Исполнитель-Альбом"
CREATE TABLE ExecutorAlbum (
    id SERIAL,
    executor_id INT,
    album_id INT,
    PRIMARY KEY(executor_id, album_id),
    FOREIGN KEY (executor_id) REFERENCES Executor(executor_id),
    FOREIGN KEY (album_id) REFERENCES Album(album_id)
);

-- Создание таблицы для связи "Трек-Сборник"
CREATE TABLE TrackCollection (
    id SERIAL,
    track_id INT,
    collection_id INT,
    PRIMARY KEY(track_id, collection_id),
    FOREIGN KEY (track_id) REFERENCES Track(track_id),
    FOREIGN KEY (collection_id) REFERENCES Collection(collection_id)
);

-- Заполнение таблицы "Исполнитель"
INSERT INTO Executor (executor_id, executor_name) VALUES
(1, 'Imagine Dragons'),
(2, 'Ed Sheeran'),
(3, 'Ariana Grande'),
(4, 'Coldplay');

-- Заполнение таблицы "Жанр"
INSERT INTO Genre (genre_id, genre_name) VALUES
(1, 'Pop'),
(2, 'Rock'),
(3, 'R&B');

-- Заполнение таблицы "Альбом"
INSERT INTO Album (album_id, album_name, album_release_year) VALUES
(1, 'Night Visions', 2012),
(2, 'Divide', 2017),
(3, 'My Everything', 2014);

-- Заполнение таблицы "Трек"
INSERT INTO Track (track_id, track_name, track_duration, album_id) VALUES
(1, 'Radioactive', 210, 1),
(2, 'Shape of You', 234, 2),
(3, 'Problem', 202, 3),
(4, 'Viva La Vida', 243, 1),
(5, 'Thunder', 187, 1),
(6, 'Perfect', 263, 2);

-- Заполнение таблицы "Сборник"
INSERT INTO Collection (collection_id, collection_name, collection_release_year) VALUES
(1, 'Best of 2010s', 2019),
(2, 'Summer Hits', 2018),
(3, 'Love Songs', 2015),
(4, 'Greatest Hits', 2020);

-- Заполнение таблицы "Исполнитель-Жанр"
INSERT INTO ExecutorGenre (executor_id, genre_id) VALUES
(1, 2),
(2, 1),
(3, 1),
(4, 2),
(4, 3);

-- Заполнение таблицы "Исполнитель-Альбом"
INSERT INTO ExecutorAlbum (executor_id, album_id) VALUES
(1, 1),
(2, 2),
(3, 3),
(4, 1),
(4, 3);

-- Заполнение таблицы "Трек-Сборник"
INSERT INTO TrackCollection (track_id, collection_id) VALUES
(1, 1),
(2, 2),
(3, 3),
(4, 4),
(5, 1),
(6, 2);

-- Запросы для задания 2

-- Название и продолжительность самого длительного трека
SELECT track_name, track_duration
FROM Track
WHERE track_duration = (SELECT MAX(track_duration) FROM Track);

-- Название треков, продолжительность которых не менее 3,5 минут
SELECT track_name
FROM Track
WHERE track_duration >= 210;

-- Названия сборников, вышедших в период с 2018 по 2020 год включительно
SELECT collection_name
FROM Collection
WHERE collection_release_year BETWEEN 2018 AND 2020;

-- Исполнители, чьё имя состоит из одного слова
SELECT executor_name
FROM Executor
WHERE executor_name NOT LIKE '% %';

-- Название треков, которые содержат слово «мой» или «my»
SELECT track_name
FROM Track
WHERE track_name ILIKE '%мой%' OR track_name ILIKE '%my%';

-- Запросы для задания 3

-- Количество исполнителей в каждом жанре
SELECT g.genre_name, COUNT(eg.executor_id) AS num_of_executors
FROM Genre g
LEFT JOIN ExecutorGenre eg ON g.genre_id = eg.genre_id
GROUP BY g.genre_name;

-- Количество треков, вошедших в альбомы 2019–2020 годов 
SELECT COUNT(*) AS num_of_tracks
FROM Track
WHERE album_id IN (SELECT album_id FROM Album WHERE album_release_name BETWEEN 2019 AND 2020);

-- Средняя продолжительность треков по каждому альбому 
SELECT a.album_name, AVG(t.track_duration) AS avg_duration
FROM Album a
JOIN Track t ON a.album_id = t.album_id
GROUP BY a.album_name;

-- Все исполнители, которые не выпустили альбомы в 2020 году 
SELECT e.executor_name
FROM Executor e
WHERE e.executor_id NOT IN (SELECT ea.executor_id FROM ExecutorAlbum ea JOIN Album a ON ea.album_id = a.album_id WHERE a.album_release_name = 2020);

-- Названия сборников, в которых присутствует конкретный исполнитель
SELECT c.collection_name
FROM collection c
JOIN trackCollection tc ON c.collection_id = tc.collection_id
JOIN track t ON tc.track_id = t.track_id
JOIN album a ON t.album_id = a.album_id
JOIN executorAlbum ea ON a.album_id = ea.album_id
JOIN executor e ON ea.executor_id = e.executor_id
WHERE e.executor_name = 'Imagine Dragons';
